{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v1"
    },
    "exported_at": "2019-08-26T21:48:37-04:00",
    "name": "Paper - Auto Setup",
    "author": "wiredbrother@gmail.com",
    "description": "An egg meant to auto-setup itself on paper. The goal is to have it set up the correct configs for DiscordSRV and add its self to the Waterfall config so its accessible automatically.",
    "image": "alpine-custom:3.9",
    "startup": "sh start.sh",
    "config": {
        "files": "{\r\n    \"server.properties\": {\r\n        \"parser\": \"properties\",\r\n        \"find\": {\r\n            \"server-ip\": \"0.0.0.0\",\r\n            \"server-port\": \"{{server.build.default.port}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \")! For help, type \",\r\n    \"userInteraction\": [\r\n        \"Go to eula.txt for more info.\"\r\n    ]\r\n}",
        "logs": "{}",
        "stop": "stop"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/ash\r\n# Paper Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\napk add --no-cache --update curl jq\r\n\r\nif [ -n \"${DL_PATH}\" ]; then\r\n    echo -e \"using supplied download url\"\r\n    DOWNLOAD_URL=`eval echo $(echo ${DL_PATH} | sed -e 's\/{{\/${\/g' -e 's\/}}\/}\/g')`\r\nelse\r\n    VER_EXISTS=`curl -s https:\/\/papermc.io\/api\/v1\/paper | jq -r --arg VERSION $MINECRAFT_VERSION '.versions[] | IN($VERSION)' | grep true`\r\n    LATEST_PAPER_VERSION=`curl -s https:\/\/papermc.io\/api\/v1\/paper | jq -r '.versions' | jq -r '.[0]'`\r\n    \r\n    if [ \"${VER_EXISTS}\" == \"true\" ]; then\r\n        echo -e \"Version is valid. Using version ${MINECRAFT_VERSION}\"\r\n    else\r\n        echo -e \"Using the latest paper version\"\r\n        MINECRAFT_VERSION=${LATEST_PAPER_VERSION}\r\n    fi\r\n    \r\n    BUILD_EXISTS=`curl -s https:\/\/papermc.io\/api\/v1\/paper\/${MINECRAFT_VERSION} | jq -r --arg BUILD ${BUILD_NUMBER} '.builds.all[] | IN($BUILD)' | grep true`\r\n    LATEST_PAPER_BUILD=`curl -s https:\/\/papermc.io\/api\/v1\/paper\/${MINECRAFT_VERSION} | jq -r '.builds.latest'`\r\n    \r\n    if [ \"${BUILD_EXISTS}\" == \"true\" ] || [ ${BUILD_NUMBER} == \"latest\" ]; then\r\n        echo -e \"Build is valid. Using version ${BUILD_NUMBER}\"\r\n    else\r\n        echo -e \"Using the latest paper build\"\r\n        BUILD_NUMBER=${LATEST_PAPER_BUILD}\r\n    fi\r\n    \r\n    echo \"Version being downloaded\"\r\n    echo -e \"MC Version: ${MINECRAFT_VERSION}\"\r\n    echo -e \"Build: ${BUILD_NUMBER}\"\r\n    DOWNLOAD_URL=https:\/\/papermc.io\/api\/v1\/paper\/${MINECRAFT_VERSION}\/${BUILD_NUMBER}\/download \r\nfi\r\n\r\ncd \/mnt\/server\r\n\r\necho -e \"running curl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\"\r\n\r\nif [ -f ${SERVER_JARFILE} ]; then\r\n    mv ${SERVER_JARFILE} ${SERVER_JARFILE}.old\r\nfi\r\n\r\ncurl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\r\n\r\necho -e \"Downloading MC server.properties\"\r\ncurl -o server.properties https:\/\/gist.githubusercontent.com\/roger109z\/6cb6cd9757733ddcf9c1499cb07b2031\/raw\/server.properties\r\ncd \/mnt\/server\r\ncurl -o spigot.yml https:\/\/gist.githubusercontent.com\/roger109z\/dc1908ae94aafaad5f31ba8c10c8c797\/raw\/spigot.yml\r\nmkdir plugins\r\ncd \/mnt\/server\/plugins\r\ncurl -o DiscordSRV.jar ${DISCORD_SRV}\r\nmkdir DiscordSRV\r\ncd \/mnt\/server\/plugins\/DiscordSRV\r\ncurl -o config.yml https:\/\/gist.githubusercontent.com\/roger109z\/24d8f5db991d76d1ba0d5d5c8ceb8e31\/raw\/config.yml\r\nsed -i 's\/!BOTTOKEN!\/\"$BOT_TOKEN\"\/g' config.yml\r\nsed -i 's\/!CHANNELS!\/{\"global\": \"$CHAT_ID\"}\/g' config.yml\r\nsed -i 's\/!CONSOLE!\/\"$CONSOLE_ID\"\/g' config.yml\r\necho -e \"Installed Server Config Stuff & DiscordSRV Shit\"\r\n\r\n# Put anything else above this line!\r\n# ----------------------------------\r\n\r\nstart(){\r\ncd \/mnt\/server\r\necho \"Starting Auto Updater Installation...\"\r\ncurrentvercheck(){\r\n\tif [ -f currentversion.txt ]; then\r\n\t\techo \"currentversion exists...\"\r\n\t\tcd ..\/\r\n\t\techo \"creating start...\"\r\n\t\tcat << 'EOF' > start.sh\r\n#!\/bin\/bash\r\n#Check for Updates\r\nsh updatescript\/updatething.sh\r\n#Start Server\r\ncurrent=`cat updatescript\/currentversion.txt`\r\njava -Xms128M -Xmx${SERVER_MEMORY}M -Dterminal.jline=false -Dterminal.ansi=true -jar paper-${current}.jar\r\nEOF\r\n\t\tchmod +x start.sh\r\n\t\techo \"Auto Updater Installation Finished\"\r\n\t\tcd\r\n\telse\r\n\t\techo \"creating currentversion...\"\r\n\t\tcat << 'EOF' > currentversion.txt\r\n0\r\nEOF\r\n\t\tcurrentvercheck\r\n\tfi\r\n}\r\ncurrentmc(){\r\n\tif [ -f currentmc.txt ]; then\r\n\t\techo \"currentmc exists...\"\r\n\t\tcurrentvercheck\r\n\telse\r\n\t\techo \"creating currentversion...\"\r\n\t\tcat << 'EOF' > currentmc.txt\r\n1.14.4\r\nEOF\r\n\t\tcurrentmc\r\n\tfi\r\n}\r\nuthingcheck(){\r\n\tif [ -f updatething.sh ]; then\r\n\t\techo \"updatething exists...\"\r\n\t\tcurrentmc\r\n\telse\r\n\t\techo \"creating updatething...\"\r\n\t\tcat << 'EOF' > updatething.sh\r\n#!\/bin\/bash\r\ncd updatescript\/\r\ncurrentmc=`cat currentmc.txt`\r\ncurrent=`cat currentversion.txt`\r\necho \"Checking for Server Update...\"\r\nnewthing=`curl -s \"https:\/\/papermc.io\/api\/v1\/paper\/${currentmc}\" | jq -r '.builds | .latest' 2>&1 | tee latestversion.txt`\r\necho \"Latest Paper is on version ${newthing}\"\r\nstartserver(){\r\n  echo \"Starting Server\"\r\n}\r\ncomparedemapples(){\r\n\tif [ \"${newthing}\" -gt \"${current}\" ]; then\r\n\t\techo \"paper-${newthing}.jar is a new update.\"\r\n\t\techo \"Updating to paper-${newthing}.jar\"\r\n\t\twget -nv -nc --content-disposition https:\/\/papermc.io\/api\/v1\/paper\/${currentmc}\/${newthing}\/download\r\n\t\tfile=\"paper-${newthing}.jar\"\r\n\t\tif [ -f \"${file}\" ]; then\r\n\t\t\techo \"paper-${newthing}.jar has been downloaded. Renaming some shit...\"\r\n\t\t\trm -R ..\/paper-${current}.jar\r\n\t\t\tmv paper-${newthing}.jar ..\/paper-${newthing}.jar\r\n\t\t\techo \"${newthing}\" > currentversion.txt\r\n\t\t\tstartserver\r\n\t\telse\r\n\t\t\techo \"Error 404: paper-${newthing}.jar could not be found.\"\r\n\t\t\tcomparedemapples\r\n\t\tfi\r\n\telse\r\n\t\techo \"paper-${newthing}.jar is already installed and running.\"\r\n\t\techo \"You good on your updates my dude.\"\r\n\t\tstartserver\r\n\tfi\r\n}\r\ncomparedemapples\r\nEOF\r\n\t\tchmod +x updatething.sh\r\n\t\tuthingcheck\r\n\tfi\r\n}\r\ndircheck(){\r\n\tif [ -d updatescript ]; then\r\n\t\techo \"updatescript dir exists...\"\r\n\t\tcd updatescript\r\n\t\tuthingcheck\r\n\telse\r\n\t\techo \"creating dir updatescript...\"\r\n\t\tmkdir updatescript\r\n\t\tdircheck\r\n\tfi\r\n}\r\ndircheck\r\n}\r\nstart",
            "container": "alpine:3.9",
            "entrypoint": "ash"
        }
    },
    "variables": [
        {
            "name": "Discord Bot Token",
            "description": "adds the Discord Bot Token to the DiscordSRV config",
            "env_variable": "BOT_TOKEN",
            "default_value": "",
            "user_viewable": 1,
            "user_editable": 1,
            "rules": "required|string|max:60"
        },
        {
            "name": "Discord Global Chat ID",
            "description": "Adds the Global Chat ID to the DiscordSRV config",
            "env_variable": "CHAT_ID",
            "default_value": "",
            "user_viewable": 1,
            "user_editable": 1,
            "rules": "required|string|max:20"
        },
        {
            "name": "Discord Console Chat ID",
            "description": "Adds the Console Chat ID of a discord server to the DiscordSRV config",
            "env_variable": "CONSOLE_ID",
            "default_value": "",
            "user_viewable": 1,
            "user_editable": 1,
            "rules": "required|string|max:20"
        },
        {
            "name": "Minecraft Version",
            "description": "The version of minecraft to download. \r\n\r\nLeave at latest to always get the latest version. Invalid versions will default to latest.",
            "env_variable": "MINECRAFT_VERSION",
            "default_value": "latest",
            "user_viewable": 1,
            "user_editable": 0,
            "rules": "required|string|max:20"
        },
        {
            "name": "Server Jar File",
            "description": "The name of the server jarfile to run the server with.",
            "env_variable": "SERVER_JARFILE",
            "default_value": "server.jar",
            "user_viewable": 1,
            "user_editable": 1,
            "rules": "required|string|max:20"
        },
        {
            "name": "Download Path",
            "description": "A URL to use to download a server.jar rather than the ones in the install script. This is not user viewable.",
            "env_variable": "DL_PATH",
            "default_value": "",
            "user_viewable": 0,
            "user_editable": 0,
            "rules": "nullable|string"
        },
        {
            "name": "Build Number",
            "description": "The build number for the paper release.\r\n\r\nLeave at latest to always get the latest version. Invalid versions will default to latest.",
            "env_variable": "BUILD_NUMBER",
            "default_value": "latest",
            "user_viewable": 1,
            "user_editable": 0,
            "rules": "required|string|max:20"
        },
        {
            "name": "Discord SRV URL",
            "description": "The URL to find DiscordSRV MUST BE RAW",
            "env_variable": "DISCORD_SRV",
            "default_value": "https:\/\/ci.scarsz.me\/repository\/download\/DiscordSRV_Build\/114:id\/DiscordSRV-Build-1.16.9-SNAPSHOT-78.jar",
            "user_viewable": 1,
            "user_editable": 1,
            "rules": "required|string|max:200"
        },
        {
            "name": "Auto-Update Server to Latest Version?",
            "description": "Yes or No",
            "env_variable": "AUTOUPDATE",
            "default_value": "Yes",
            "user_viewable": 1,
            "user_editable": 1,
            "rules": "required|string|max:20"
        }
    ]
}